%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 708.000000 434.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 708 434
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 708 434
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Avenir-Heavy
%!FontType1-1.0: Avenir-Heavy 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /Avenir-Heavy def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /s put
dup 34 /t put
dup 35 /a put
dup 36 /r put
dup 37 /e put
dup 38 /u put
dup 39 /n put
dup 40 /space put
dup 41 /c put
dup 42 /o put
dup 43 /two put
dup 44 /d put
dup 45 /b put
dup 46 /l put
dup 47 /k put
dup 48 /h put
dup 49 /p put
dup 50 /plus put
dup 51 /equal put
dup 52 /one put
dup 53 /zero put
dup 54 /y put
dup 55 /f put
dup 56 /question put
dup 57 /fi put
dup 58 /m put
dup 59 /i put
dup 60 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -450 1 index div -433 2 index div 1425 3 index div 1126 5 -1 roll div]cvx def
/sfnts [<


6254775131190808193151775454775131190808193151775421574E36364E572121574E36364E57000100410000018402C400060039BB00040003000000042B00B800004558B800032F1BB90003000C3E59B800004558B800052F1BB9000500063E59BA000000050003111239303101072737331123010C8546D66D78023A7B53B2FD3C0001003B0000021502D0002000A1B800212FB800222FB80019DCB900060003FC410B000900060019000600290006003900060049000600055DB8002110B8000FD0B8000F2FB9000E0003FCBA001D000F0019111239B8001910B8001ED000B800004558B800142F1BB90014000C3E59B800004558B8001F2F1BB9001F00063E59B8001410B9000B0001FC410B0008000B0018000B0028000B0038000B0048000B00055DB8001F10B9001D0001FC303137013E0335342E0223220607273E0333321E021514060F012115213B01130C1A150E111C25152D3A067E04273E523030533E243D30DB0148FE267F010A0C1B1E21121622180D342C0A314B321A19314C3343612CCB6C0000000001002EFFF4021002D0003700D7BB001E0003003100042B410B000900310019003100290031003900310049003100055DBA00170031001E111239B800172FB900060003FC410B000900060019000600290006003900060049000600055DB8001E10B80039DC00B800004558B800122F1BB90012000C3E59B800004558B800232F1BB9002300063E59BB00010001003600042BB8001210B900090001FC410B000800090018000900280009003800090048000900055DBA001B00360001111239B8002310B9002C0001FC410B0007002C0017002C0027002C0037002C0047002C00055D30311333323E0235342623220607273E0333321E0215140607151E0115140E0223222E0227371E0133323E0235342E022B01DE1F1A312718382D24390D7F0C2C3C48272E523E25403944462742572F2C4E3F2E0C800B3830182B21131D2D381B1D01A7061426202934292522273A2512182F472F39590E020A6042334E351B13283F2C222C30101D2919222B17080000000002003E00A2025C01BC00030007001700BB00040001000500042BBB00000001000100042B30310115213505152135025CFDE2021EFDE201BC6666B46666000000020030FFFA01EC02D60025003300CDBB001A0003000900042BBB002C0005002600042B410B0006002C0016002C0026002C0036002C0046002C00055DBA00000026002C111239B800002F410B000900090019000900290009003900090049000900055DB900250003FCB8001A10B80035DC00B800004558B800152F1BB90015000C3E59B800004558B8002F2F1BB9002F00063E59B8001510B9000C0001FC410B0008000C0018000C0028000C0038000C0048000C00055DB8002F10B9002900







00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/plus 2 def
/zero 3 def
/one 4 def
/two 5 def
/three 6 def
/equal 7 def
/question 8 def
/a 9 def
/b 10 def
/c 11 def
/d 12 def
/e 13 def
/f 14 def
/h 15 def
/i 16 def
/k 17 def
/l 18 def
/m 19 def
/n 20 def
/o 21 def
/p 22 def
/r 23 def
/s 24 def
/t 25 def
/u 26 def
/y 27 def
/fi 28 def
/brevecmb 29 def
/uhorn 30 def
/uhornbreve 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-450 -433 1425 1126}def
/UniqueID 4354639 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934BF1825E90532B3199BF4AD8341A0D82B819C5D461DB2499DC7CC2B43833CC5FAD5CB7027FD0D57F5858DBD230B7384DC7E3D647F770303748C4786D48371284AB7200D4E137604A8481F77D1E75F99640740EDCCAF817717C6C7EAAE7B9C7A466782B0A37C862BADF328AC95B6E0D5156775CE9EEFC1AD773EE94D3ECB85E7C7A842B8E1115D980E9A07197F239CB69C00F68156496385ED76225385E7CFAD61ECA273BD709300EDD34FDE3E5BBA0B98880F99447FC9D7C6CA05F38CC7809772137005FA4B91BAC6016431FFA19B77DD94CA79B96D138932F6AC58C7A1AC121AFE09E08E4E0B7B91228F41657B9E42721D7D8430D4740144A15B2231BE14FA4613E6950DFA123ED358ABDD8F21535850778B15FDA3F0EB2BC09FD4191B1C5B1B6A4A21153C9B2DEDF057690843BA46C641DAA397CB678F31336BDCBFEE8113ED13EBA317737F66B124B580D418684A5749A4891068CF451FE4CD09F8AE5AC700446D7AB926FA9CD28E52D82861256E5847DC7665BB2C159BB65570DA345C680B16DA02CF7B23645369A9F52C102B42C36DA4DF75FD81A57A16C7520FC906220C32C4AE6EE1097F875EDDC9EBF813E72C33D2FC62E81E95D035A694D62190AE20EC61D68FDF56F688CB6E706C909D98105904D108062993DF5737470F356C27B2FDF28812351B6D55E97FD4952875EC5AF5734D2579F4C86FD966ECBB2A0A3AF23148981A5A9C21D27480FE9263C4F686EB4C99974880481AD4B12D5A95F1786CDB7722E41CDF1DDD883E4F741B3BEE4D1751434

5FF95C7C0C6F97785F31C0EE4BE5CFAE504CD8774863320277F762FEA5CD262BF4A4AD2F444F3FBFC9BF02AEBCFA6FC0AADAF64C8C7857601C8D424DCBFD4451302278B35DA9D761AB44F45C4285B0AD2D4871CE1DD8CB24A4EA7D69C9A2BE8ED72A5854FDB25A059A3036363A0A57C6AE20A2F9A03FB217E5CCD134C141ADE98EB34934E41263195B94A8C259635D1472E56E97D8BFF4DD64C1C446DB5835EE6B1E3E33510A51565F9B1B1F4933BD6C514C14DE96B00CFB34AF6B75F719D20C7562FB630750A48A1647B04BAB26E9AD070496FBAFC8459B3A8399CF30814EBCBCDC2744F035DF5A42735A115A793F6947F34FEF1D862A62ABE8DD8B8367B47469A33793A81D7EBA5257AD8356E72B9E3461555DD92025329C9D0AA7C064EB85B4A0D1BFCAF794108B3996B9A7A6EE339E6D5F05397A286D69743994A7490318E8F9E44D56C5E029B306C07BE39D9435A9D8510F1E6C653868B3290F1AF945F6CFE57015A3280B63FE2BD2F16DBE27A40A3D8FB8FCD5C1EE6AAD76485FC808D990290C30CA7F688FABC85381E00523EF479AE9DB255787B6A656B783E1FB686B2A0B14856F195AE2538D643B6B9546884E9394A82EBE87DEA67C76D15B1D090C82D2780EB8286754CB4AF6ED2AE69F1A0B336390FDEAD60A3A5AE498FFDD8AF1515C702830A25D2EA95C695EC54E01A3C9AB90472B0A134F0D601209604F3788F41C26E758986EE2B2927AF3ED29F35C45711393373E775DE0D202B5F2863A7C47299D65912C5888AFE24A867222114BC967863348C1E960CA039554EDD3631C5DAA0D3F94A7E82B04EF98B6E3A03609BB336890AACD342D31CD94383DFB5E1FCA6B6853DFAE9EAFF183372483CD5531E480D599323493B22B59324880B379117A5074202B7509169F61421B000F6BCD1F29E93AB64119342E6CC43D0234E2C9BD5144CA6DCA64620361B19B047A42FC9F016D6B8F9C9F5200297037893216617317A8FA405FD1F424BC80B6FB6290479543C7353FF8F8EED0115FEC362C925932CB4EE8F750EE018285793DBB0098332AE3310F00465660374E458C7FA2ADFA361D93ECBB3F2D863FECC14EA5611A5C46A2498F51B1D5E3EDB50CA3C6009549A0B37AF788FD974274F3DA0F192A1A54A54E8A59485195CF405E5150EBA563C75802C5033C9479F0EF5B3FC68B07B1484484E287FA244A2684C532C15BBBE59CE04C26005357F1EE974B92ADED2EDE8B856B4CBB8DB201C3B1D11AB654C9396A915E4F0EF1F37B143263883A734D13A447BA9826313F97F9B6416EAB683B20ED8EFBB254340CF8837312A3DC203A7285C8BBB06D05F583F0160216273DB43DD8294846B7E91877D00E1F746C461B66700A3D4DD7E0AE63209F718B55AF7D1711305E816EDEEBE761BBE60E911AAE84BF52D1FF24B3B4AAD9D4E9BBCF4692467C

83DF71B8A8BE26D79CEA8936B6382FB6756654802AF238B47367FF5E1A293614C21AA3956533E90447068AB7374246EDFFF99D6A5A9BB50FAD75D8539C9D292E9307AB82BE0743E4403F2340E7054CD7609BC7C2443496AB7E77B5DA5F964C871766B87553F82807D513C9750237582D877CCA4AED09B37359CC7FF5054617228656C93E2D6D6653D92A471C8121C2E34D4BECE2585875E1CEB765E10914724FD559167D88752313F6CC54662A98B077C08933241973579279C18621F5A678F2780C7B9B5C8DFD77278A9529C9639744DC779B09362D815228A6A8084D49633A60CB570B19531488FDCB932D09780C3321404AF238172B8962DE3632199A8A89F60165ED48F06D5F928B81FD38D4BFDF6A304B3B4A74241077FEE9DC86DACA27C8CFEB88483168322E9A937710BE611C8797A6DF1EA41949F8FA1F16D3A9E29FAD066B0EF5C49EB73129EA065457877AC5C8F8A6BB805E1CEE3F7FEC1FA008C21CD5604C45716CCD80F8F20452EC426C6E6F2A0CEEA54EA32C3F9356A210B348CDAB8568CB27F04BAD7F7AEB24108B65B837715F5A735228A54C3FE35A5FB3651AEF4D7FF2696A11A3147CEEA1069868288ACE6EB001D037A25F051218EC5C869AB06F9284DF3DC7C76BD938E3D081C1E5CD213403737B949BEFFECED6221A9DDF76D50986D3EB928DEA11190D00454A7CE8013C73CCD78F8498FA2353FED38C49D9E8F3ABB6285C7AC97BA3B2C5865D550C8E273649AF6CC90151FFAA9B2C1EDDC3FEFBDDD614DCD3F300AA43D97DE2F9F4A41ED9FA0F1E8318F836F04FFACD6D0F658F8491D9C5CAD42B6FF60650338CF63645CBF8C74B27645B60DC30E5873B282BE756EDEEAC2BDA8EACDC0E29747A1B671590A6815D13D6F2D265F889196C4D2A074E65377B8AEF70DA9E87FFEDB832BDE77DA4A578F4AE379B2935C170CA0B21E2AAE2DD2666A867F86E4F2CE7A024199654A9C7A309D7E9B5986A847BC8C32A3B72A65DB8018256B83FCD6258366AFD1ACD6A16B1E90385AF48FDCFF55B6EC30F29A091F1CD9B8553AEAF71C40630BFDFF0FBDA497E55EAEEF7663A06B93EF5C04C7B66BAFFB905A555C1C7833FCD9CD832F7BA07BE1BD95259708C14E4098E239D06C9B89F3A31D168C519E054CF93FF5FCA8D06A82C237BE8F3C8949455B193342446EDC32C3E618E4BA5D2631DD91218298156A63276808E2A4E2FE7106F79DA55DF2C139C84578580BD27DEC346F9F0B31F2D09F06B67E6BA68113B05B572BD6E0583B8F933D67A57C15D2FE11FC6F9FFF0ABA18F2ADAABEC5E2B0C6DC98815949E50F9856268538373551E0ED99C54E961E34A934AADEA55E27A51FE1A66A6935C001619B1B6720E32A2742D4F4BB76907BA63D8B1D2EEB9B3343C0552C932174D0472179593352F5D72B772BB915701A491B934AD9AA0C8D752

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Avenir-Heavy cguidfix
/F1.1/Avenir-Heavy renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
2 w
2 J
1 j
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
q
0 0 708 434 rc
1 0 0 -1 -359 494 cm
855.5 269 m
855.5 293.56903 l
S
0 J
0 j
0 i
855.5 303.16904 m
855.5 293.56903 l
859.09998 293.56903 m
855.5 303.16904 l
851.90002 293.56903 l
S
2 J
1 j
0.60000002 i
855.5 167 m
855.5 191.10001 l
S
0 J
0 j
0 i
855.5 200.7 m
855.5 191.10001 l
859.09998 191.10001 m
855.5 200.7 l
851.90002 191.10001 l
S
2 J
2 j
0.60000002 i
0.39920801 0.415795 0.42006099 sc
432 112.18 m
432 80.000008 l
S
0 J
0 j
0 i
432 123.7 m
432 112.18 l
436.32001 112.18 m
432 123.7 l
427.67999 112.18 l
S
2 J
1 j
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
432 167 m
432 191.10001 l
S
0 J
0 j
0 i
432 200.7 m
432 191.10001 l
435.60001 191.10001 m
432 200.7 l
428.39999 191.10001 l
S
2 J
1 j
0.60000002 i
432 269 m
432 284.89999 l
432 290.56903 l
432 293.56903 l
S
0 J
0 j
0 i
432 303.16904 m
432 293.56903 l
435.60001 293.56903 m
432 303.16904 l
428.39999 293.56903 l
S
2 J
1 j
0.60000002 i
498.78159 341.75 m
514.68158 341.75 l
546.18158 341.75 l
546.18158 147 l
578.84998 147 l
581.84998 147 l
S
0 J
0 j
0 i
591.45001 147 m
581.84998 147 l
581.84998 143.39999 m
591.45001 147 l
581.84998 150.60001 l
S
2 J
1 j
0.60000002 i
922.28156 341.75 m
954.34998 341.75 l
S
0 J
0 j
0 i
963.95001 341.75 m
954.34998 341.75 l
954.34998 338.14999 m
963.95001 341.75 l
954.34998 345.35001 l
S
2 J
1 j
0.60000002 i
710.53156 341.75 m
726.43158 341.75 l
757.93158 341.75 l
757.93158 147 l
790.59998 147 l
793.59998 147 l
S
0 J
0 j
0 i
803.20001 147 m
793.59998 147 l
793.59998 143.39999 m
803.20001 147 l
793.59998 150.60001 l
S
2 J
1 j
0.60000002 i
432 377.03098 m
432 392.93097 l
432 452.5 l
612.84998 452.5 l
615.84998 452.5 l
S
0 J
0 j
0 i
625.45001 452.5 m
615.84998 452.5 l
615.84998 448.89999 m
625.45001 452.5 l
615.84998 456.10001 l
S
2 J
1 j
0.60000002 i
643.75 377.03098 m
643.75 392.93097 l
643.75 421.60001 l
643.75 424.60001 l
S
0 J
0 j
0 i
643.75 434.20001 m
643.75 424.60001 l
647.34998 424.60001 m
643.75 434.20001 l
640.15002 424.60001 l
S
2 J
1 j
0.60000002 i
855.5 377.03098 m
855.5 392.93097 l
855.55554 436.60001 l
855.55554 439.60001 l
S
0 J
0 j
0 i
855.55554 449.20001 m
855.55554 439.60001 l
859.15558 439.60001 m
855.55554 449.20001 l
851.95557 439.60001 l
S
2 J
1 j
0.60000002 i
1016.25 361.75 m
1016.25 377.64999 l
1016.25 452.5 l
674.65002 452.5 l
671.65002 452.5 l
S
0 J
0 j
0 i
662.04999 452.5 m
671.65002 452.5 l
671.65002 456.10001 m
662.04999 452.5 l
671.65002 448.89999 l
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
1 0 0 -1 107 424 cm
/F1.1[ 13 0 0 -13 0 0]sf
-13.962 4 m
(!"#$")[ 5.772000 5.057000 6.981000 5.057000 0.000000 ] xS
/Cs1 SC
0.246133 0.26041299 0.26518801 sc
CM
80.07106 431.07104 m
83.976318 427.16583 83.976318 420.83417 80.07106 416.92896 c
76.165817 413.02368 69.834183 413.02368 65.92894 416.92896 c
62.023682 420.83417 62.023682 427.16583 65.92894 431.07104 c
69.834183 434.97632 76.165817 434.97632 80.07106 431.07104 c
f
1 1 1 sc
295.3566 52.10659 m
301.21448 46.24873 301.21448 36.75127 295.3566 30.89341 c
289.49872 25.035521 280.00128 25.035521 274.1434 30.89341 c
268.28552 36.75127 268.28552 46.24873 274.1434 52.10659 c
280.00128 57.964481 289.49872 57.964481 295.3566 52.10659 c
f
1 w
1 J
1 j
0.60000002 i
0.246133 0.26041299 0.26518801 sc
1 0 0 -1 -359 494 cm
654.35657 441.8934 m
660.21448 447.75128 660.21448 457.24872 654.35657 463.1066 c
648.49872 468.96448 639.00128 468.96448 633.14343 463.1066 c
627.28552 457.24872 627.28552 447.75128 633.14343 441.8934 c
639.00128 436.03552 648.49872 436.03552 654.35657 441.8934 c
S
0 i
CM
292.17462 48.924614 m
296.27515 44.824112 296.27515 38.175888 292.17462 34.075386 c
288.0741 29.974863 281.4259 29.974863 277.32538 34.075386 c
273.22485 38.175888 273.22485 44.824112 277.32538 48.924614 c
281.4259 53.025135 288.0741 53.025135 292.17462 48.924614 c
f
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
1 0 0 -1 284.75 9 cm
-36.828999 4 m
($%"&$'\(!\)*$%)[ 4.823000 7.462000 5.057000 7.462000 5.291000 7.462000 3.848000 5.772000 6.266000 7.930000 4.823000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
217 290 m
352.5 290 l
354.70914 290 356.5 288.20914 356.5 286 c
356.5 229 l
356.5 226.79086 354.70914 225 352.5 225 c
217 225 l
214.79086 225 213 226.79086 213 229 c
213 286 l
213 288.20914 214.79086 290 217 290 c
h
217 290 m
f
2 w
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -359 494 cm
576 204 m
711.5 204 l
713.70917 204 715.5 205.79086 715.5 208 c
715.5 265 l
715.5 267.20914 713.70917 269 711.5 269 c
576 269 l
573.79083 269 572 267.20914 572 265 c
572 208 l
572 205.79086 573.79083 204 576 204 c
h
576 204 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 284.75 257.5 cm
-29.3605 -14 m
($&'\("%!"\(+)[ 5.057000 7.462000 7.462000 3.848000 5.057000 7.462000 5.772000 5.057000 3.848000 0.000000 ] xS
-50.433498 4 m
($%,&\)%\(-.*\)/!\("*\()[ 4.823000 7.462000 8.190000 7.462000 6.266000 7.462000 3.848000 8.190000 3.380000 7.930000 6.266000 6.981000 5.772000 3.848000 5.057000 7.930000 0.000000 ] xS
-46.338501 22 m
("0*!%\("0#"\(1#!!)[ 5.070000 7.462000 7.930000 5.772000 7.462000 3.848000 5.070000 7.462000 6.981000 5.057000 3.848000 8.190000 6.981000 5.772000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
622.95001 172.25 m
691.54999 172.25 l
699.66443 172.25 706.25 163.28999 706.25 152.25 c
706.25 141.21001 699.66443 132.25 691.54999 132.25 c
622.95001 132.25 l
614.83557 132.25 608.25 141.21001 608.25 152.25 c
608.25 163.28999 614.83557 172.25 622.95001 172.25 c
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -359 494 cm
981.95001 321.75 m
1050.55 321.75 l
1058.6644 321.75 1065.25 330.70999 1065.25 341.75 c
1065.25 352.79001 1058.6644 361.75 1050.55 361.75 c
981.95001 361.75 l
973.83557 361.75 967.25 352.79001 967.25 341.75 c
967.25 330.70999 973.83557 321.75 981.95001 321.75 c
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 657.25 152.25 cm
-32.480499 4 m
(!\)*$%\(23\(4)[ 5.772000 6.266000 7.930000 4.823000 7.462000 3.848000 8.658000 8.658000 3.848000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
462.20001 367 m
530.79999 367 l
538.91443 367 545.5 358.04001 545.5 347 c
545.5 335.95999 538.91443 327 530.79999 327 c
462.20001 327 l
454.0856 327 447.5 335.95999 447.5 347 c
447.5 358.04001 454.0856 367 462.20001 367 c
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -359 494 cm
821.20001 127 m
889.79999 127 l
897.91443 127 904.5 135.96001 904.5 147 c
904.5 158.03999 897.91443 167 889.79999 167 c
821.20001 167 l
813.08557 167 806.5 158.03999 806.5 147 c
806.5 135.96001 813.08557 127 821.20001 127 c
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 496.5 347 cm
-32.480499 4 m
(!\)*$%\(23\(4)[ 5.772000 6.266000 7.930000 4.823000 7.462000 3.848000 8.658000 8.658000 3.848000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
250.45 367 m
319.04999 367 l
327.1644 367 333.75 358.04001 333.75 347 c
333.75 335.95999 327.1644 327 319.04999 327 c
250.45 327 l
242.3356 327 235.75 335.95999 235.75 347 c
235.75 358.04001 242.3356 367 250.45 367 c
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -359 494 cm
609.45001 127 m
678.04999 127 l
686.16443 127 692.75 135.96001 692.75 147 c
692.75 158.03999 686.16443 167 678.04999 167 c
609.45001 167 l
601.33557 167 594.75 158.03999 594.75 147 c
594.75 135.96001 601.33557 127 609.45001 127 c
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 284.75 347 cm
-32.480499 4 m
(!\)*$%\(23\(4)[ 5.772000 6.266000 7.930000 4.823000 7.462000 3.848000 8.658000 8.658000 3.848000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
38.700001 367 m
107.3 367 l
115.4144 367 122 358.04001 122 347 c
122 335.95999 115.4144 327 107.3 327 c
38.700001 327 l
30.5856 327 24 335.95999 24 347 c
24 358.04001 30.5856 367 38.700001 367 c
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -359 494 cm
397.70001 127 m
466.29999 127 l
474.4144 127 481 135.96001 481 147 c
481 158.03999 474.4144 167 466.29999 167 c
397.70001 167 l
389.5856 167 383 158.03999 383 147 c
383 135.96001 389.5856 127 397.70001 127 c
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 73 347 cm
-28.151501 4 m
(!\)*$%\(3\(5)[ 5.772000 6.266000 7.930000 4.823000 7.462000 3.848000 8.658000 3.848000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
74.783859 187.11118 m
137.56456 155.8302 l
139.54185 154.845 140.3461 152.44342 139.3609 150.46614 c
138.97322 149.68806 138.34264 149.05748 137.56456 148.6698 c
74.783859 117.38882 l
73.660484 116.82909 72.339516 116.82909 71.216141 117.38882 c
8.4354372 148.6698 l
6.4581466 149.655 5.6538992 152.05658 6.6390996 154.03386 c
7.0267768 154.81194 7.657371 155.44252 8.4354372 155.8302 c
71.216141 187.11118 l
72.339516 187.67091 73.660484 187.67091 74.783859 187.11118 c
h
74.783859 187.11118 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -359 494 cm
433.78387 306.88882 m
496.56458 338.1698 l
498.54184 339.155 499.3461 341.55658 498.3609 343.53387 c
497.97324 344.31192 497.34262 344.94254 496.56458 345.3302 c
433.78387 376.61118 l
432.66049 377.1709 431.33951 377.1709 430.21613 376.61118 c
367.43542 345.3302 l
365.45816 344.345 364.6539 341.94342 365.6391 339.96613 c
366.02676 339.18808 366.65738 338.55746 367.43542 338.1698 c
430.21613 306.88882 l
431.33951 306.3291 432.66049 306.3291 433.78387 306.88882 c
h
433.78387 306.88882 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 73 152.25 cm
-30.3435 -5.7150002 m
(#'6\(-.*\)/!\()[ 6.981000 7.462000 6.747000 3.848000 8.190000 3.380000 7.930000 6.266000 6.981000 5.772000 0.000000 ] xS
-19.754999 12.285 m
(7*&',8)[ 4.576000 7.930000 7.462000 7.462000 8.203000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
5.25 290 m
140.75 290 l
142.95914 290 144.75 288.20914 144.75 286 c
144.75 229 l
144.75 226.79086 142.95914 225 140.75 225 c
5.25 225 l
3.0408609 225 1.25 226.79086 1.25 229 c
1.25 286 l
1.25 288.20914 3.0408609 290 5.25 290 c
h
5.25 290 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -359 494 cm
364.25 204 m
499.75 204 l
501.95914 204 503.75 205.79086 503.75 208 c
503.75 265 l
503.75 267.20914 501.95914 269 499.75 269 c
364.25 269 l
362.04086 269 360.25 267.20914 360.25 265 c
360.25 208 l
360.25 205.79086 362.04086 204 364.25 204 c
h
364.25 204 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 73 257.5 cm
-29.3605 -5 m
($&'\("%!"\(4)[ 5.057000 7.462000 7.462000 3.848000 5.057000 7.462000 5.772000 5.057000 3.848000 0.000000 ] xS
-62.3545 13 m
(9',\(-.*\)/!\("0#"\(1#!!)[ 7.709000 7.462000 8.190000 3.848000 8.190000 3.380000 7.930000 6.266000 6.981000 5.772000 3.848000 5.070000 7.462000 6.981000 5.057000 3.848000 8.190000 6.981000 5.772000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
286.53387 187.11118 m
349.31458 155.8302 l
351.29184 154.845 352.0961 152.44342 351.1109 150.46614 c
350.72324 149.68806 350.09262 149.05748 349.31458 148.6698 c
286.53387 117.38882 l
285.41049 116.82909 284.08951 116.82909 282.96613 117.38882 c
220.18544 148.6698 l
218.20815 149.655 217.4039 152.05658 218.3891 154.03386 c
218.77678 154.81194 219.40736 155.44252 220.18544 155.8302 c
282.96613 187.11118 l
284.08951 187.67091 285.41049 187.67091 286.53387 187.11118 c
h
286.53387 187.11118 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -359 494 cm
645.53387 306.88882 m
708.31458 338.1698 l
710.29187 339.155 711.09613 341.55658 710.1109 343.53387 c
709.72321 344.31192 709.09265 344.94254 708.31458 345.3302 c
645.53387 376.61118 l
644.41046 377.1709 643.08954 377.1709 641.96613 376.61118 c
579.18542 345.3302 l
577.20813 344.345 576.40387 341.94342 577.3891 339.96613 c
577.77679 339.18808 578.40735 338.55746 579.18542 338.1698 c
641.96613 306.88882 l
643.08954 306.3291 644.41046 306.3291 645.53387 306.88882 c
h
645.53387 306.88882 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 284.75 152.25 cm
-30.3435 -5.7150002 m
(#'6\(-.*\)/!\()[ 6.981000 7.462000 6.747000 3.848000 8.190000 3.380000 7.930000 6.266000 6.981000 5.772000 0.000000 ] xS
-22.647499 12.285 m
($%:#;'8)[ 4.823000 7.462000 11.310000 6.981000 3.380000 7.462000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
428.75 290 m
564.25 290 l
566.45917 290 568.25 288.20914 568.25 286 c
568.25 229 l
568.25 226.79086 566.45917 225 564.25 225 c
428.75 225 l
426.54086 225 424.75 226.79086 424.75 229 c
424.75 286 l
424.75 288.20914 426.54086 290 428.75 290 c
h
428.75 290 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -359 494 cm
787.75 204 m
923.25 204 l
925.45917 204 927.25 205.79086 927.25 208 c
927.25 265 l
927.25 267.20914 925.45917 269 923.25 269 c
787.75 269 l
785.54083 269 783.75 267.20914 783.75 265 c
783.75 208 l
783.75 205.79086 785.54083 204 787.75 204 c
h
787.75 204 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 496.5 257.5 cm
-29.3605 -14 m
($&'\("%!"\(<)[ 5.057000 7.462000 7.462000 3.848000 5.057000 7.462000 5.772000 5.057000 3.848000 0.000000 ] xS
-50.433498 4 m
($%,&\)%\(-.*\)/!\("*\()[ 4.823000 7.462000 8.190000 7.462000 6.266000 7.462000 3.848000 8.190000 3.380000 7.930000 6.266000 6.981000 5.772000 3.848000 5.057000 7.930000 0.000000 ] xS
-46.338501 22 m
("0*!%\("0#"\(1#!!)[ 5.070000 7.462000 7.930000 5.772000 7.462000 3.848000 5.070000 7.462000 6.981000 5.057000 3.848000 8.190000 6.981000 5.772000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
498.28387 187.11118 m
561.06458 155.8302 l
563.04187 154.845 563.84613 152.44342 562.8609 150.46614 c
562.47321 149.68806 561.84265 149.05748 561.06458 148.6698 c
498.28387 117.38882 l
497.16049 116.82909 495.83951 116.82909 494.71613 117.38882 c
431.93542 148.6698 l
429.95816 149.655 429.1539 152.05658 430.1391 154.03386 c
430.52676 154.81194 431.15738 155.44252 431.93542 155.8302 c
494.71613 187.11118 l
495.83951 187.67091 497.16049 187.67091 498.28387 187.11118 c
h
498.28387 187.11118 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -359 494 cm
857.28387 306.88882 m
920.06458 338.1698 l
922.04187 339.155 922.84613 341.55658 921.8609 343.53387 c
921.47321 344.31192 920.84265 344.94254 920.06458 345.3302 c
857.28387 376.61118 l
856.16046 377.1709 854.83954 377.1709 853.71613 376.61118 c
790.93542 345.3302 l
788.95813 344.345 788.15387 341.94342 789.1391 339.96613 c
789.52679 339.18808 790.15735 338.55746 790.93542 338.1698 c
853.71613 306.88882 l
854.83954 306.3291 856.16046 306.3291 857.28387 306.88882 c
h
857.28387 306.88882 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 496.5 152.25 cm
-30.3435 -5.7150002 m
(#'6\(-.*\)/!\()[ 6.981000 7.462000 6.747000 3.848000 8.190000 3.380000 7.930000 6.266000 6.981000 5.772000 0.000000 ] xS
-22.647499 12.285 m
($%:#;'8)[ 4.823000 7.462000 11.310000 6.981000 3.380000 7.462000 0.000000 ] xS
2 J
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 -359 494 cm
643.75 167 m
643.75 191.10001 l
S
0 J
0 j
0 i
643.75 200.7 m
643.75 191.10001 l
647.34998 191.10001 m
643.75 200.7 l
640.15002 191.10001 l
S
2 J
1 j
0.60000002 i
643.75 269 m
643.75 293.56903 l
S
0 J
0 j
0 i
643.75 303.16904 m
643.75 293.56903 l
647.34998 293.56903 m
643.75 303.16904 l
640.15002 293.56903 l
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
1 0 0 -1 161.5 169 cm
-9.9905005 4 m
(6%!)[ 6.747000 7.462000 0.000000 ] xS
1 0 0 -1 369.875 169 cm
-9.9905005 4 m
(6%!)[ 6.747000 7.462000 0.000000 ] xS
1 0 0 -1 578.25 169 cm
-9.9905005 4 m
(6%!)[ 6.747000 7.462000 0.000000 ] xS
1 0 0 -1 87.019608 107.5 cm
-7.6960001 4 m
('*)[ 7.462000 0.000000 ] xS
1 0 0 -1 299.53922 107.5 cm
-7.6960001 4 m
('*)[ 7.462000 0.000000 ] xS
1 0 0 -1 513.03925 107.5 cm
-7.6960001 4 m
('*)[ 7.462000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
