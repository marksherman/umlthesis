%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 518.000000 614.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 518 614
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 518 614
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Avenir-Heavy
%!FontType1-1.0: Avenir-Heavy 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /Avenir-Heavy def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /f put
dup 34 /o put
dup 35 /r put
dup 36 /space put
dup 37 /e put
dup 38 /a put
dup 39 /c put
dup 40 /h put
dup 41 /p put
dup 42 /j put
dup 43 /t put
dup 44 /s put
dup 45 /n put
dup 46 /E put
dup 47 /x put
dup 48 /l put
dup 49 /u put
dup 50 /d put
dup 51 /i put
dup 52 /b put
dup 53 /k put
dup 54 /m put
dup 55 /y put
dup 56 /L put
dup 57 /g put
dup 58 /F put
dup 59 /R put
dup 60 /fi put
dup 61 /G put
dup 62 /v put
dup 63 /I put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -450 1 index div -433 2 index div 1425 3 index div 1126 5 -1 roll div]cvx def
/sfnts [<


0018001300280013003800130048001300055DB8000210B9001D0001FC410B0007001D0017001D0027001D0037001D0047001D00055D3031250623222E0235343E0233321617072E0123220E0215141E02333236373523352102C483A25289633838638952518E385D226136375940232340593730552191010F344635618853558B623527325E212427455C35396046281213A7720000000001004C000000CA02C40003002FBB00010003000000042B00B800004558B800002F1BB90000000C3E59B800004558B800022F1BB9000200063E593031133311234C7E7E02C4FD3C0001004F000001FA02C400050035BB00010003000000042B00B800004558B800002F1BB90000000C3E59B800004558B800042F1BB9000400063E59B900020001FC30311333112115214F7E012DFE5502C4FDAE720002004F0000026502C4000F001C00AFB8001D2FB8001E2FB8001D10B80000D0B800002FB8001E10B80006DCBA000900000006111239B900150005FC410B000900150019001500290015003900150049001500055DB8000BD0B8000B2FB8000010B9001B0003FCB8000DD000B800004558B800002F1BB90000000C3E59B800004558B8000A2F1BB9000A00063E59B800004558B8000E2F1BB9000E00063E59BB00100001000C00042BBA0009000C0010111239B8000010B9001A0001FC30311333321E021514060713230323112313323E0235342E022B01154FF6335F4A2C554FBC98A45C7EE01B362D1C1A2A33186D02C4132E4E3C4D680BFEC7012CFED40198051327231F261306C0000000020024FFF401DC01EC0025003400EDB800352FB800362FB80024DCB900250004FCB80001D0B800012FB8003510B80009D0B800092FB8002510B80011D0B8002510B80026D0B800262FB8000910B9002C0003FC410B0006002C0016002C0026002C0036002C0046002C00055D00B800004558B8001C2F1BB9001C000A3E59B800004558B800042F1BB9000400063E59B800004558B800242F1BB9002400063E59BB00110002002600042BB8000410B900310002FC410B000700310017003100270031003700310047003100055DBA000100040031111239B8001C10B900150002FC410B000800150018001500280015003800150048001500055D303125230E0123222E0235343E043B0135342623220607273E0133321E041511232723220E0215141E02333236350170031A5030213F311E1C2F3E43441E1E3E302642183F286B3933462E190B026C0719193E37260F181E0F3E3B42292512243624273725160B030D2D2D1B173F292417242F302D11FEECD7040F1D1A111710073B33000000020044FFF4024A02F40018002C010BB8002D2FB8002E2FB8002D10B80000D0B800002FB900010003FCB80003D0B800032FB8002E10B8000DDCB8000110B800







0015000400112BB8000E20457D691844B800002B00BA0001000200022B01BA0003000300022B01BE0003002E0026001E0016000E00082BBE00040036002E00240016000E00082BBE0005002A0026001E0016000E00082B00BE000100330026001E0016000E00082BBE0002003A002E0024001B000E00082B00BA0006000400072BB8000020457D6918440000
00>] def
/CharStrings 35 dict dup begin
/.notdef 0 def
/space 1 def
/E 2 def
/F 3 def
/G 4 def
/I 5 def
/L 6 def
/R 7 def
/a 8 def
/b 9 def
/c 10 def
/d 11 def
/e 12 def
/f 13 def
/g 14 def
/h 15 def
/i 16 def
/j 17 def
/k 18 def
/l 19 def
/m 20 def
/n 21 def
/o 22 def
/p 23 def
/r 24 def
/s 25 def
/t 26 def
/u 27 def
/v 28 def
/x 29 def
/y 30 def
/fi 31 def
/brevecmb 32 def
/uhorn 33 def
/uhornbreve 34 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-450 -433 1425 1126}def
/UniqueID 4354639 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934BF1825E90532B3199BF4AD8341A0D82B819C5D461DB2499DC7CC2B43833CC5FAD5CB7027FD0D57F5858DBD230B7384DC7E3D647F770303748C4786D48371284AB7200D4E137604A8481F77D1E75F99640740EDCCAF817717C6C7EAAE7B9C7A466782B0A37C862BADF328AC95B6E0D5156775CE9EEFC1AD773EE94D3ECB85E7C7A842B8E1115D980E9A07197F239CB69C00F68156496385ED76225385E7CFAD61ECA273BD709300EDD34FDE3E5BBA0B98880F99447FC9D7C6CA05F38CC7809772137005FA4B91BAC6016431FFA19B77DD94CA79B96D138932F6AC58C7A1AC121AFE09E08E4E0B7B91228F41657B9E42721D7D8430D4740144A15B2231BE14FA4613E6950DFA123ED358ABDD8F21535850778B15FDA3F0EB2BC09FD4191B1C5B1B6A4A21153C9B2DEDF057690843BA46C641DAA397CB678F31336BDCBF9E09AA562F082C51525B703174F5098AF90FDDF98E54005594DE3F3051D7B190B0C78F6E9B3974250648D1B75BD57758E964C24CC90F684714D340D764E4BCFA6582D660BA856E765A750BF43A4C3F41603BEA3D6AFF1CFB8F678C3C97101E4C9D8B73CE5D713D39B37E744EB3D60BC715FFA0EC7D5A223D6280B4EF3662EF71AD7F9FFBC42F9418FD3EF0FE1F722203890EB47FFD73CADBE59B15F0DFD5A5DF07D674E3F6D3DE25A958AAE493F94D658CA4BCD9C7AE557C54348ACE5577A6C342005B829815FA014D54BB183875D87845628C986EDB3279F1D7B8F61371B92CA56F688DAD8F20AE12A1B58BB5AA05FEBAA616BC154E2B7




5CDE46B8911DA1374A0DE2D67B3B71575E0164F46DDCEA9A5AA1514BA1446F314B681131E8FEB5CE5BE9967CECB086F9A102C08CB77173CA1C7AFCAD53F945FC954ECF5A362631BDE6B6602E4E264738AC82113F73216B08DF8F5069637FDDF4195A72F66612CD47072E368C24A30A7EF5D65B801056283B1F758E4255937FD0C5B6BDBA68E4A5E75E0DD8F3B7C0EE5EB511365FC649FB390C93A504A2D02B1AEF689E1AC1052E5BEB97A2A90CA61B5A09AE0DDDDFE426B86C1DCE8AFA98C377F9EF5721A6C574A1F0F802998C436D90FB91769DCC97C2DF946A4D59ABBB040A64FFFF2D40B53320EF48891C416307B3671CB512B597E27019DD88B487FF372E6261C9D917BBB850C1A1E0698C75EC79C1B5749CF49AD4D4FDFF83599F41580773792667D8C63E04ED258D28C6E90DB61424A5D2821650A4E15B621765B228F97E154396DDF5D27C070787E323AEBF7684A10425F1BC018B5C7DC9CB4B62E8C209E825B3973C24B5B45E9814A01B7EC82A4C842F0D3C3F6D5456461890E8065E68983F1ADACC2B85C21CCA8B541906FF98A2EA87A9CC6C8B2B3AAAED4B26E66CD1F1DB97A11B4236986EB0EFD06A982AADD6CC31254202E6FED4D4B8ACA80F06068674F6A3C04048D7F0AC9DE8F9DD9828557D3433556AA5A09165FCDC7C623B35A40514BD3E78816AFB0E04E7698C111963E39820498C45A4B02A79E89D1B6C4CBAE40FA15493B472391C6DE3E092F3841EB3903FC7F2E3264497E34C7F7CDD761F714189512C0D12A1C5C42F5FD8B528B057538D13DD3037A3005C192A8FCAD1F8A8EA2B33FAAEC8B2550D56361DF1CB4D7820C59E1726AA2DB0BE6B113500DF66FD911668DEF81779BBE99B52DCF96B6B96FA1D5AC5A0D90A347873145292A16645139C92895D876BEACCF132527E08179720D4A7C6752910132E2449971F1E32B743B99C86EC014EEEF1922355A069A6EBCB7D6DD6A91C7DD030D5BC92739FE48F76227A50A7497942EA098C47291845A51C5EAB770E51AE196C0FCD606105C8A234FB257AF51E84314EBEB52399E66296122E3C58F6874707E6E87D081BA71906B373C41A136128E7A77FC5779CAC034E634E0832A189B451078D6557F07C9CE9724F2D142094D133D78F560CC14B4C22117ECEEBB997571BDABD4BC1DF6E385D1F5A28D05099EB43347E7FC7E7945639EC44D09913930F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Avenir-Heavy cguidfix
/F1.1/Avenir-Heavy renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.95939499 0.959418 0.95940602 sc
q
0 0 518 614 rc
5.5 485 m
512.5 485 l
514.70917 485 516.5 483.20914 516.5 481 c
516.5 62 l
516.5 59.790859 514.70917 58 512.5 58 c
5.5 58 l
3.2908609 58 1.5 59.790859 1.5 62 c
1.5 481 l
1.5 483.20914 3.2908609 485 5.5 485 c
h
5.5 485 m
f
2 w
1 J
1 j
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
356.5 189 m
863.5 189 l
865.70917 189 867.5 190.79086 867.5 193 c
867.5 612 l
867.5 614.20917 865.70917 616 863.5 616 c
356.5 616 l
354.29086 616 352.5 614.20917 352.5 612 c
352.5 193 l
352.5 190.79086 354.29086 189 356.5 189 c
h
356.5 189 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 271.5 cm
/F1.1[ 13 0 0 -13 0 0]sf
-48.269001 -190.5 m
(!"#$%&'\($\)#"*%'+)[ 4.576000 7.930000 5.057000 3.848000 7.462000 6.981000 6.266000 7.462000 3.848000 8.190000 4.823000 7.930000 3.380000 7.462000 6.266000 0.000000 ] xS
/Cs1 SC
0.85490197 0.85490197 0.85490197 sc
CM
175.5 446 m
342.5 446 l
344.70914 446 346.5 444.20914 346.5 442 c
346.5 82 l
346.5 79.790863 344.70914 78 342.5 78 c
175.5 78 l
173.29086 78 171.5 79.790863 171.5 82 c
171.5 442 l
171.5 444.20914 173.29086 446 175.5 446 c
h
175.5 446 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
526.5 228 m
693.5 228 l
695.70917 228 697.5 229.79086 697.5 232 c
697.5 592 l
697.5 594.20917 695.70917 596 693.5 596 c
526.5 596 l
524.29083 596 522.5 594.20917 522.5 592 c
522.5 232 l
522.5 229.79086 524.29083 228 526.5 228 c
h
526.5 228 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 262 cm
-54.028 -161 m
(!"#$%&'\($,-&\),\("+)[ 4.576000 7.930000 5.057000 3.848000 7.462000 6.981000 6.266000 7.462000 3.848000 5.772000 7.462000 6.981000 8.190000 5.772000 7.462000 7.930000 0.000000 ] xS
2 J
2 j
0.60000002 i
/Cs1 SC
0.39920801 0.415795 0.42006099 sc
1 0 0 -1 -351 674 cm
432 93.18 m
432 80.000008 l
S
0 J
0 j
0 i
432 104.7 m
432 93.18 l
436.32001 93.18 m
432 104.7 l
427.67999 93.18 l
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
1 0 0 -1 115 604 cm
-13.962 4 m
(,+&#+)[ 5.772000 5.057000 6.981000 5.057000 0.000000 ] xS
/Cs1 SC
0.246133 0.26041299 0.26518801 sc
CM
88.07106 611.07104 m
91.976318 607.16583 91.976318 600.83417 88.07106 596.92896 c
84.165817 593.02368 77.834183 593.02368 73.92894 596.92896 c
70.023682 600.83417 70.023682 607.16583 73.92894 611.07104 c
77.834183 614.97632 84.165817 614.97632 88.07106 611.07104 c
f
1 1 1 sc
443.6066 26.60659 m
449.46448 20.74873 449.46448 11.25127 443.6066 5.3934102 c
437.74872 -0.46448001 428.25128 -0.46448001 422.3934 5.3934102 c
416.53552 11.25127 416.53552 20.74873 422.3934 26.60659 c
428.25128 32.464481 437.74872 32.464481 443.6066 26.60659 c
f
1 w
1 J
1 j
0.60000002 i
0.246133 0.26041299 0.26518801 sc
1 0 0 -1 -351 674 cm
794.60657 647.39343 m
800.46448 653.25128 800.46448 662.74872 794.60657 668.60657 c
788.74872 674.46448 779.25128 674.46448 773.39343 668.60657 c
767.53552 662.74872 767.53552 653.25128 773.39343 647.39343 c
779.25128 641.53552 788.74872 641.53552 794.60657 647.39343 c
S
0 i
CM
440.42462 23.424614 m
444.52515 19.324112 444.52515 12.675889 440.42462 8.575387 c
436.3241 4.474864 429.6759 4.474864 425.57538 8.575387 c
421.47485 12.675889 421.47485 19.324112 425.57538 23.424614 c
429.6759 27.525137 436.3241 27.525137 440.42462 23.424614 c
f
1 1 1 sc
202 323.33334 m
316 323.33334 l
318.20914 323.33334 320 321.54248 320 319.33334 c
320 262.33334 l
320 260.12421 318.20914 258.33334 316 258.33334 c
202 258.33334 l
199.79086 258.33334 198 260.12421 198 262.33334 c
198 319.33334 l
198 321.54248 199.79086 323.33334 202 323.33334 c
h
202 323.33334 m
f
2 w
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
553 350.66666 m
667 350.66666 l
669.20917 350.66666 671 352.45752 671 354.66666 c
671 411.66666 l
671 413.87579 669.20917 415.66666 667 415.66666 c
553 415.66666 l
550.79083 415.66666 549 413.87579 549 411.66666 c
549 354.66666 l
549 352.45752 550.79083 350.66666 553 350.66666 c
h
553 350.66666 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 290.83334 cm
-50.927502 -5 m
(./'012%$3!$40"'5,$)[ 7.943000 6.981000 6.266000 3.380000 7.462000 8.190000 7.462000 3.848000 3.380000 4.576000 3.848000 8.190000 3.380000 7.930000 6.266000 6.981000 5.772000 0.000000 ] xS
-30.940001 13 m
(&#%$%6\)+7)[ 6.981000 4.823000 7.462000 3.848000 7.462000 11.310000 8.190000 5.057000 0.000000 ] xS
1 0 0 -1 471 16 cm
-11.557 4 m
(%-2)[ 7.462000 7.462000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
24 406.5 m
138 406.5 l
140.20914 406.5 142 404.70914 142 402.5 c
142 345.5 l
142 343.29086 140.20914 341.5 138 341.5 c
24 341.5 l
21.790861 341.5 20 343.29086 20 345.5 c
20 402.5 l
20 404.70914 21.790861 406.5 24 406.5 c
h
24 406.5 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
375 267.5 m
489 267.5 l
491.20914 267.5 493 269.29086 493 271.5 c
493 328.5 l
493 330.70914 491.20914 332.5 489 332.5 c
375 332.5 l
372.79086 332.5 371 330.70914 371 328.5 c
371 271.5 l
371 269.29086 372.79086 267.5 375 267.5 c
h
375 267.5 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 81 374 cm
-47.047001 -5 m
(8"&2$,-&\),\("+,$)[ 6.747000 7.930000 6.981000 8.190000 3.848000 5.772000 7.462000 6.981000 8.190000 5.772000 7.462000 7.930000 5.057000 5.772000 0.000000 ] xS
-24.556999 13 m
(!#"6$93+)[ 4.576000 4.823000 7.930000 11.310000 3.848000 8.190000 3.380000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
202 406.5 m
316 406.5 l
318.20914 406.5 320 404.70914 320 402.5 c
320 345.5 l
320 343.29086 318.20914 341.5 316 341.5 c
202 341.5 l
199.79086 341.5 198 343.29086 198 345.5 c
198 402.5 l
198 404.70914 199.79086 406.5 202 406.5 c
h
202 406.5 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
553 267.5 m
667 267.5 l
669.20917 267.5 671 269.29086 671 271.5 c
671 328.5 l
671 330.70914 669.20917 332.5 667 332.5 c
553 332.5 l
550.79083 332.5 549 330.70914 549 328.5 c
549 271.5 l
549 269.29086 550.79083 267.5 553 267.5 c
h
553 267.5 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 374 cm
-45.044998 -5 m
(:3/$+#&303-9$/60$)[ 7.462000 3.380000 6.981000 3.848000 5.057000 5.057000 6.981000 3.380000 3.393000 3.380000 7.462000 8.190000 3.848000 6.981000 11.310000 3.380000 0.000000 ] xS
-31.902 13 m
('"##1\)+3"-)[ 6.266000 7.930000 5.057000 5.057000 7.462000 8.190000 5.070000 3.380000 7.930000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
376 406.5 m
490 406.5 l
492.20914 406.5 494 404.70914 494 402.5 c
494 345.5 l
494 343.29086 492.20914 341.5 490 341.5 c
376 341.5 l
373.79086 341.5 372 343.29086 372 345.5 c
372 402.5 l
372 404.70914 373.79086 406.5 376 406.5 c
h
376 406.5 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
727 267.5 m
841 267.5 l
843.20917 267.5 845 269.29086 845 271.5 c
845 328.5 l
845 330.70914 843.20917 332.5 841 332.5 c
727 332.5 l
724.79083 332.5 723 330.70914 723 328.5 c
723 271.5 l
723 269.29086 724.79083 267.5 727 267.5 c
h
727 267.5 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 433 374 cm
-52.013 -5 m
(;%21'%$+%/+$<%02$)[ 8.190000 7.462000 8.190000 7.462000 6.266000 7.462000 3.848000 5.057000 7.462000 6.981000 5.057000 3.848000 7.709000 7.462000 3.380000 8.190000 0.000000 ] xS
-24.797501 13 m
('\(&-9%,)[ 6.266000 7.462000 6.981000 7.462000 8.190000 7.462000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
202 240.16667 m
316 240.16667 l
318.20914 240.16667 320 238.37581 320 236.16667 c
320 179.16667 l
320 176.95753 318.20914 175.16667 316 175.16667 c
202 175.16667 l
199.79086 175.16667 198 176.95753 198 179.16667 c
198 236.16667 l
198 238.37581 199.79086 240.16667 202 240.16667 c
h
202 240.16667 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
553 433.83334 m
667 433.83334 l
669.20917 433.83334 671 435.62421 671 437.83334 c
671 494.83334 l
671 497.04248 669.20917 498.83334 667 498.83334 c
553 498.83334 l
550.79083 498.83334 549 497.04248 549 494.83334 c
549 437.83334 l
549 435.62421 550.79083 433.83334 553 433.83334 c
h
553 433.83334 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 207.66667 cm
-28.5285 -5 m
(=%-%#&+%$)[ 10.114000 7.462000 7.462000 7.462000 5.057000 6.981000 5.057000 7.462000 0.000000 ] xS
-47.060001 13 m
(6%+&2&+&$6&\),)[ 11.310000 7.462000 5.057000 6.981000 8.190000 6.981000 5.057000 6.981000 3.848000 11.310000 6.981000 8.190000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
202 157 m
316 157 l
318.20914 157 320 155.20914 320 153 c
320 96 l
320 93.790863 318.20914 92 316 92 c
202 92 l
199.79086 92 198 93.790863 198 96 c
198 153 l
198 155.20914 199.79086 157 202 157 c
h
202 157 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 -351 674 cm
553 517 m
667 517 l
669.20917 517 671 518.79083 671 521 c
671 578 l
671 580.20917 669.20917 582 667 582 c
553 582 l
550.79083 582 549 580.20917 549 578 c
549 521 l
549 518.79083 550.79083 517 553 517 c
h
553 517 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 124.5 cm
-45.5065 -5 m
(./+#&'+$'\(&-9%$)[ 7.943000 6.981000 5.057000 5.057000 6.981000 6.266000 5.057000 3.848000 6.266000 7.462000 6.981000 7.462000 8.190000 7.462000 0.000000 ] xS
-24.797501 13 m
(!%&+1#%,)[ 4.576000 7.462000 6.981000 5.057000 7.462000 4.823000 7.462000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
376 323.33334 m
490 323.33334 l
492.20914 323.33334 494 321.54248 494 319.33334 c
494 262.33334 l
494 260.12421 492.20914 258.33334 490 258.33334 c
376 258.33334 l
373.79086 258.33334 372 260.12421 372 262.33334 c
372 319.33334 l
372 321.54248 373.79086 323.33334 376 323.33334 c
h
376 323.33334 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
727 350.66666 m
841 350.66666 l
843.20917 350.66666 845 352.45752 845 354.66666 c
845 411.66666 l
845 413.87579 843.20917 415.66666 841 415.66666 c
727 415.66666 l
724.79083 415.66666 723 413.87579 723 411.66666 c
723 354.66666 l
723 352.45752 724.79083 350.66666 727 350.66666 c
h
727 350.66666 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 433 290.83334 cm
-53.2155 -5 m
(=%-%#&+%$3-+%#>&0$)[ 10.114000 7.462000 7.462000 7.462000 5.057000 6.981000 5.057000 7.462000 3.848000 3.380000 7.462000 5.057000 7.462000 5.057000 6.747000 6.981000 3.380000 0.000000 ] xS
-16.497 13 m
(+36%,)[ 5.070000 3.380000 11.310000 7.462000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
24 566 m
138 566 l
140.20914 566 142 564.20917 142 562 c
142 505 l
142 502.79086 140.20914 501 138 501 c
24 501 l
21.790861 501 20 502.79086 20 505 c
20 562 l
20 564.20917 21.790861 566 24 566 c
h
24 566 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
375 108 m
489 108 l
491.20914 108 493 109.79086 493 112 c
493 169 l
493 171.20914 491.20914 173 489 173 c
375 173 l
372.79086 173 371 171.20914 371 169 c
371 112 l
371 109.79086 372.79086 108 375 108 c
h
375 108 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 81 533.5 cm
-49.8615 -5 m
(?2%-+3!7$#%0%>&-+$)[ 3.614000 8.190000 7.462000 7.462000 5.070000 3.380000 4.576000 6.747000 3.848000 4.823000 7.462000 3.380000 7.462000 6.747000 6.981000 7.462000 5.057000 0.000000 ] xS
-41.905499 13 m
(\)#"*%'+,$3-$24)[ 8.190000 4.823000 7.930000 3.380000 7.462000 6.266000 5.057000 5.772000 3.848000 3.380000 7.462000 3.848000 8.203000 0.000000 ] xS
2 J
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 -351 674 cm
432 173 m
432 254.60001 l
S
0 J
0 j
0 i
432 264.20001 m
432 254.60001 l
435.60001 254.60001 m
432 264.20001 l
428.39999 254.60001 l
S
2 J
1 j
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
493 300 m
536.09998 300 l
S
0 J
0 j
0 i
545.70001 300 m
536.09998 300 l
536.09998 296.39999 m
545.70001 300 l
536.09998 303.60001 l
S
2 J
1 j
0.60000002 i
610 332.5 m
610 337.76666 l
S
0 J
0 j
0 i
610 347.36667 m
610 337.76666 l
613.59998 337.76666 m
610 347.36667 l
606.40002 337.76666 l
S
2 J
1 j
0.60000002 i
610 415.66666 m
610 420.93332 l
S
0 J
0 j
0 i
610 430.53333 m
610 420.93332 l
613.59998 420.93332 m
610 430.53333 l
606.40002 420.93332 l
S
2 J
1 j
0.60000002 i
610 498.83334 m
610 504.10001 l
S
0 J
0 j
0 i
610 513.70001 m
610 504.10001 l
613.59998 504.10001 m
610 513.70001 l
606.40002 504.10001 l
S
2 J
1 j
0.60000002 i
671 549.5 m
686.90002 549.5 l
696.40002 549.5 l
696.40002 300 l
707.09998 300 l
710.09998 300 l
S
0 J
0 j
0 i
719.70001 300 m
710.09998 300 l
710.09998 296.39999 m
719.70001 300 l
710.09998 303.60001 l
S
2 J
1 j
0.60000002 i
784 332.5 m
784 337.76666 l
S
0 J
0 j
0 i
784 347.36667 m
784 337.76666 l
787.59998 337.76666 m
784 347.36667 l
780.40002 337.76666 l
S
2 J
1 j
0.60000002 i
784 415.66666 m
784 630.09998 l
S
0 J
0 j
0 i
784 639.70001 m
784 630.09998 l
787.59998 630.09998 m
784 639.70001 l
780.40002 630.09998 l
S
ep
end
%%Trailer
%%EOF
