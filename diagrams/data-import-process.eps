%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 518.000000 614.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 518 614
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 518 614
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Avenir-Heavy
%!FontType1-1.0: Avenir-Heavy 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /Avenir-Heavy def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /f put
dup 34 /o put
dup 35 /r put
dup 36 /space put
dup 37 /e put
dup 38 /a put
dup 39 /c put
dup 40 /h put
dup 41 /p put
dup 42 /j put
dup 43 /t put
dup 44 /s put
dup 45 /n put
dup 46 /E put
dup 47 /x put
dup 48 /l put
dup 49 /u put
dup 50 /d put
dup 51 /i put
dup 52 /b put
dup 53 /k put
dup 54 /m put
dup 55 /y put
dup 56 /L put
dup 57 /g put
dup 58 /F put
dup 59 /R put
dup 60 /fi put
dup 61 /G put
dup 62 /v put
dup 63 /I put
dup 64 /M put
dup 65 /q put
dup 66 /T put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -450 1 index div -433 2 index div 1425 3 index div 1126 5 -1 roll div]cvx def
/sfnts [<











00>] def
/CharStrings 38 dict dup begin
/.notdef 0 def
/space 1 def
/E 2 def
/F 3 def
/G 4 def
/I 5 def
/L 6 def
/M 7 def
/R 8 def
/T 9 def
/a 10 def
/b 11 def
/c 12 def
/d 13 def
/e 14 def
/f 15 def
/g 16 def
/h 17 def
/i 18 def
/j 19 def
/k 20 def
/l 21 def
/m 22 def
/n 23 def
/o 24 def
/p 25 def
/q 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/v 31 def
/x 32 def
/y 33 def
/fi 34 def
/brevecmb 35 def
/uhorn 36 def
/uhornbreve 37 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-450 -433 1425 1126}def
/UniqueID 4354639 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934BF1825E90532B3199BF4AD8341A0D82B819C5D461DB2499DC7CC2B43833CC5FAD5CB7027FD0D57F5858DBD230B7384DC7E3D647F770303748C4786D48371284AB7200D4E137604A8481F77D1E75F99640740EDCCAF817717C6C7EAAE7B9C7A466782B0A37C862BADF328AC95B6E0D5156775CE9EEFC1AD773EE94D3ECB85E7C7A842B8E1115D980E9A07197F239CB69C00F68156496385ED76225385E7CFAD61ECA273BD709300EDD34FDE3E5BBA0B98880F99447FC9D7C6CA05F38CC7809772137005FA4B91BAC6016431FFA19B77DD94CA79B96D138932F6AC58C7A1AC121AFE09E08E4E0B7B91228F41657B9E42721D7D8430D4740144A15B2231BE14FA4613E6950DFA123ED358ABDD8F21535850778B15FDA3F0EB2BC09FD4191B1C5B1B6A4A21153C9B2DEDF057690843BA46C641DAA397CB678F31336BDCBF4988F388FB9351C40D3579C35EA8C09761DA80A735141D7DC635CC64C9EDBA6DC4108C69A8FEB12887315EEB6536D8C7FC1ACE173C60A6E012E9C43E63C50C3F9AFA03AA50C97B65D84DEABC0D0A0DF3AB3AD2867628C8EC672846A20F97C4906D4B53AA81353E7C52015E9F04B65AF9FC788EF200EA06577C2299B266385A55BF7A35F843CB56F077B05115CC5E89D9D18CDB59C6C4FBC09E823DA33D841E46BCF8B6A05F7008896844EA846761A9C3431B4C4380878F4AEB4078424B3C16CF50EAD5180B838F6B6566F2E3894B0B2D794194D40837F86856732C52454A5D71E18C89B18F95AC9E29DF55D4F5E2364594CF5E9FFEDB001
D5D11D437BE1DDB4F4FE061405137DF2BE44ADF0A65FA9D113A0D79DE00E7E7C00BCAFCF8C74EFDAE3F62E41DD1C68D674EA9D9F9A4644CEB330463CD7F01F3930B760A5A06B0A01948D32386A6DFB5DC830EABD4AE09AAE9EF3A3349D8BA70CE841B8AA25AF7D5F3B137CF782574686B87BFA36B227430C9D1445A11319646AB52CA70275FA02E101CB13618C3077CE691D5A27CE03395B4F516091093A2AA53557C3AFADE909E90297E700698C62B19D72010D6615321ECC8373683F186407939170C1BAB029443C671C5B77079ADF9991B79899592009ACF76C00610823077C97A0F00C1E125479EBEAA033247873BF246E1661AA3DBE5CE32C47B04BFAF41349C181B38B06F43DFD4017D0EB7E7EDA89C47BA293233898A408B2353AC5619D776E81AD63BB5E750EB57C410247DFFEDD5771C5C8B1D8BDB8D615D40C7DE1D8BCDB6D2548C7869AFCE6ACA36C7700FE611FB592ED9268830488620FDC21B65AC67CE5CE62EAC182D96F428D755F40F13B5F46B831C400F95EB8565316AEB0E4528413787A524C8E44225E7E4D6319D7208B6DBC3888EE8AA3EE270BE04DB0E58AB8B140CADC0B6DABEEA31A760D0E82530477FFE17A5D33DA6A8B3DA9F858F5E5311F8BA279F49A79B9810494297CD44A5BC21FCA476119AE3AE73B3E246918F50C70E58AD6104A4E83D2931C230D0A9B67E9D8FD6174491C369A607B7D384F15728402E4107262C9393B608622BAC56D536C436A390D787A3AD58A5BC4CEAC59C8D0448249CB926A918C89783F27408C2ABC7A29BDEEC574EA87A79E2B6AEE092EF7F5890FAC9B2037FF8C47DF6027E4694BA5DB0C53A06365CF4B6C7415FC2CC1721E3B218EB408D7A790B2846BEC1EE11FE6F493E5DA12D854D71F08DCB1DE9D3271BA2666797D1761736A7B3D881FC7ED08369B0DC37790C2FBC6FF1AD69B13C01407BC8FDD4BB096DE3172575E91AEFC3FEF31921E126556E29A07AEADAE438826CF74D656B1894EE25973CF78FB1C27C847B3B73F568E0AA279B650A0088A67A6D87E97FC36F0C8472F4B3349D90CBA7AC2BAAA1D262B82B55D028356FB55C0ACC1DDBEAD0B78DCA1A0BA57467040875AF0F2C026A37B69E0844B5FC9DD44DF4A03429EB2015DEE925522DC54037699D5725A9B5B20EAF495FC50ABA7867ABD846DE5A7A89B88F0C98C81EE09A197B14D0D0080E2051E18EA44F22F7C613A704B1F193DDF7806A98A1D646F822CB58B56FC1AA449938F0051DFC91FDFF97CBBF5ED1756AF71C414989EC47F12860364A5BAA8EA0F476905792F4303DA77F61D820C70326849A0416ECDAB55FFA748EF0DC6602E6AF39C4467141BBE6F1F211EFC27C9D2C19939DA7AD3C084506762EF1BF46F2940382FF56E34FF1334D30B9494B6BC7DDA5B6E69A4F7E988C9F8656E3D549C8853715FFA1E898551
369139164EFC7BD2459FA6E1700A5465CA4B3DE38A94B47A8166A1F67FB04C0B6DE7CF01F921FEC4403FAEBA50FAB272CB69E3D0610E207ADB70293414989141C045C498390BCFE371BD72D4011BF44C2642EFFDF824A46BD9D3D8CC2D87F084CA9D86682CAD8AA87D295C2DAF11651E4F67326419C6F3F085E446D79FAD5B83FE8C912FD6DB6FBF0C1E153A64BCD9FFA6893045EEDBF1CD9D4B6B294F5FA62B7031FC875F866983A4561D6DD746F1F45FCD6B99839B6BC180C4F99A8BEACF8E07B3189CE98F6701ED17653E3CE654D44B1C691253F5B8B4C65A080352C8426B352AD181C5DDE9E5EBB38DC0F49E4D9515C48F64B4D54A2BC5637D19DA5CD8B1FA45A2EA09AC28D7D3FBBC858BB7EBF75B1B0BA8E450CCD662D50EC4B11E1558357B22E5855A815948F7A9789E7E768B713FFF582A6513ABABBC1A45AD00BD18D5A64B058C4B8F380FB37C1CF5A4BBEEE5560FC4DD5B0FAE5B07F95CB8DBB71D22EDE61B9DE94A692B60BF88168175DB39276C7B62B32298494F56066D5CC4DDC3D890ED0EC137F61A000C82F858BED4E14899794AED50B5D21D48D4E4561F6594E97D394EC0E6E656BBD56207274FF63D15B696C3EC9C2824A31A76E326F3FBE046969AD138271755341E002A567123E2F18BB43C303E58532D774A35EDC139721025C08C7A192CF9B23550DD3884C4C546E724CB9FD47FE78C7A8E84F1EFE9331B86DE0A5306D84017B55E611DA323FD45178209244C9F3EDDACA7F6922A1416957828707664A3AE3D944D659F2B330BC7A0E69E2E6887ABB56A20754A095B7060687A31B9245C81F9974312BA0B451883C31734A4A2546ACF876160856B1F9B8B6E1534AE76AD5E23428275D5C8C32C8A045F8DDFAEA560130B5D98EF311B122980108F5D8687BC3505A5EC3F42D1E89A35191608ED31C98CE53C391BC19957421B48506E329C485EF6CF0E33C90580CF00ADB2E6C6A7330FB403D0693D8266E806CE25750D89D84354DCAE8D9114F6F565C1B9746BE6B1A5941582A74B81D737F0A1E68F8CD5884728343A3B04B8ADB9AA98EEAE772D9DA28B656F9730E8A156B38DB6AC87FADD3116FCE89CB992DD3603FEDD9F15D3B71220278D97FD3CCA834C9A1571AAEFCC3DD6B8650A1AB4B7A2331281E70986534060C4EC17E326AB559294C7164CD13869F069E4907C891C455CD9C6AAC05C4A5B182BBF09B0CDE152412BDA0B47FE6F90935C74EB35BE3272AA9BC51A5F59DFE7899A393FC96DDD049F405136EA6233D9534099F7AE0266EF9F8BAC5DA34651C20D28C8DB6009EE5E472D1EA1AAFEB635B8AF3A851C055A6966E638B2976A35C31A2F5B04F34DE2303E0D4A0042A27B713A0F6D0D9287EF77BF39ECFF39A474A71A050FF492E9E9A1E006F9ED8F9CCE9E2DD3F9037AC25AFC98B65698A451E552C0967909440B
7621E226FB33AC1267B371183EE60C74EF0010FF8B087AC6B3298F83B5B3310C128C2126027FE3B5FD52ABE936F9370E3689E96395546D10FFB090673AEA7BD733769E7945312B6413EA303BDFB12F76114A7B77AF33FC45BD0034F15BC6E6D9270F4FC0D921637C172FC82428FDFEDA6E81B68F90583E8309EF528D34799DC228EE2E4C4BD9A192C419865F95A101A8C27996B77CA9D62FC6C692F00C4166F661465B2C52A57FDEC36AF1475239F067BC6566F9B0FF656F5008AFCE65090573198CF06A12592EDC8DB90DCEB5667DE5AFC1095C605024ACD25E743F0B9D1690E4772078E5C392F8A855E861224B35F7F9FB1D9B36FC7C7108A9C7AE87EF25DCB952AAC158B35D5E20762AE730BBF8DD8ECD783C3DBFF98FE01B96F297940E9FB1D8A2689D4BEC82CBC869F6021693ABCADA54A15213D0024CB3951EAD4714929FEB05C01E18127385421AC287B0A9564EE7E73FB07C13C6F3336C9A0C2F648E96972216743F14185F7A666FA362746FEBCF4CCC1DF59FE18A22D7F3CB3A9E1B9C283E415CF239AEC39B0DC377A36AC86CBECF94CB18471832FC133F87383C4BB5642E2C63CDA0707B3E8FD7A7DDC1EE6DA3240463682780CC96B57D51953158CC788ECC6099DAF8300372ADC47A4475C5B265478AA9A5C4F7D58DFC752E48D11F63BBA7E98B3E1BEF78B849D6ED0E5E452D345C4833F5BD11218874B5EFA754F9848FBAD997C9FC96C0D3721693D61D4557B2C0AF1FDDB8E295F397A31A55B28940520CBB6FF5066AE9C4F8D521333395F894046C3E75F7E8E2F8C47F652E0F8B9747D9D5FEFED58A1958D0BC9E47C4F77695A80DB485CFD4D7A7A809403FE6BB191EE287670FDF259F38890A32B8CB35429A510F796E5EE535410713A5999D87AE029D87A54B6EB4AAEF7BC22971F0B8A40E8468B7C6E827308CB9C3E408079A6832C08C479DF87B5146566AF22E52422D2349BE853BD8D2C6230763C3A1C0E3F8041EE4D4DA7E2E495BA1E672104A597B21C0AE4187BD9827723D990B42865429AD9A290F5139C1F0E3BE79AE3AE8BDD29B350929F306909B909FCB2CCABDC7E6A8F4B8D757838B330A3D20BAAB8A22C28371D0F1D5C5086BE720F5E743B48EC33C334FEB2F47CFE638C00A82DF784DE9B6B1D37BA15FC0EF093CED441E8CEDA08094A267DB24BCD4963F004D233C29DCA885E918C5B1DEB7D37EE6B8AAC41543C6AFEE61E1BFAE7284A615DC02762656797D7E515DEE83ADA2390E9FCCDAEA665B9DB1B0EFF7511A99EC2173D9DED64DBD2DF76B429CDE11D37D96126B696BC475B1DE6D27EA382B7E3248CDC2260A4063A32F1240D7AE3211E4FE14262B5CFA35345D81A32094CB15A2385A866BEE4FC7D1BE488EA3715EE5CEDDCBD99C2C557E310493F8692330725F34BC771F42A83B4FF502F143486171E08EB864C5


4F3C0639B166CAE32D20E66083AA9BC4706064171A5740AC2B3BE233BDD561DDD0393037ED9471DBF5140610DEF40DE082DDD293E9CA61FF1347BA098452CAE07B5F13EF76C5A688A8EA24FEB6F50280923249886762146B69B28B4B0B04D4C55E6919CB09266C7B395AB24A7CCAAA347041846851FBE2B4A4D9B8D9B98B209BA035DAC8C7287515A63AC2A6C6725848482A69D57BE7F553FE12DE77B88D97EC382C77F3E992ABCB788CA709E233866B71E3A07982E04B1E98709C84E17528D1DF3FA01D37D96CF39295558FFCBB2E7AE49527428DF4F2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Avenir-Heavy cguidfix
/F1.1/Avenir-Heavy renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.95939499 0.959418 0.95940602 sc
q
0 0 518 614 rc
5.5 485 m
512.5 485 l
514.70917 485 516.5 483.20914 516.5 481 c
516.5 62 l
516.5 59.790859 514.70917 58 512.5 58 c
5.5 58 l
3.2908609 58 1.5 59.790859 1.5 62 c
1.5 481 l
1.5 483.20914 3.2908609 485 5.5 485 c
h
5.5 485 m
f
2 w
1 J
1 j
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
356.5 189 m
863.5 189 l
865.70917 189 867.5 190.79086 867.5 193 c
867.5 612 l
867.5 614.20917 865.70917 616 863.5 616 c
356.5 616 l
354.29086 616 352.5 614.20917 352.5 612 c
352.5 193 l
352.5 190.79086 354.29086 189 356.5 189 c
h
356.5 189 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 271.5 cm
/F1.1[ 13 0 0 -13 0 0]sf
-48.269001 -190.5 m
(!"#$%&'\($\)#"*%'+)[ 4.576000 7.930000 5.057000 3.848000 7.462000 6.981000 6.266000 7.462000 3.848000 8.190000 4.823000 7.930000 3.380000 7.462000 6.266000 0.000000 ] xS
/Cs1 SC
0.85490197 0.85490197 0.85490197 sc
CM
175.5 446 m
342.5 446 l
344.70914 446 346.5 444.20914 346.5 442 c
346.5 82 l
346.5 79.790863 344.70914 78 342.5 78 c
175.5 78 l
173.29086 78 171.5 79.790863 171.5 82 c
171.5 442 l
171.5 444.20914 173.29086 446 175.5 446 c
h
175.5 446 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
526.5 228 m
693.5 228 l
695.70917 228 697.5 229.79086 697.5 232 c
697.5 592 l
697.5 594.20917 695.70917 596 693.5 596 c
526.5 596 l
524.29083 596 522.5 594.20917 522.5 592 c
522.5 232 l
522.5 229.79086 524.29083 228 526.5 228 c
h
526.5 228 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 262 cm
-54.028 -161 m
(!"#$%&'\($,-&\),\("+)[ 4.576000 7.930000 5.057000 3.848000 7.462000 6.981000 6.266000 7.462000 3.848000 5.772000 7.462000 6.981000 8.190000 5.772000 7.462000 7.930000 0.000000 ] xS
2 J
2 j
0.60000002 i
/Cs1 SC
0.39920801 0.415795 0.42006099 sc
1 0 0 -1 -351 674 cm
432 93.18 m
432 80.000008 l
S
0 J
0 j
0 i
432 104.7 m
432 93.18 l
436.32001 93.18 m
432 104.7 l
427.67999 93.18 l
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
1 0 0 -1 115 604 cm
-13.962 4 m
(,+&#+)[ 5.772000 5.057000 6.981000 5.057000 0.000000 ] xS
/Cs1 SC
0.246133 0.26041299 0.26518801 sc
CM
88.07106 611.07104 m
91.976318 607.16583 91.976318 600.83417 88.07106 596.92896 c
84.165817 593.02368 77.834183 593.02368 73.92894 596.92896 c
70.023682 600.83417 70.023682 607.16583 73.92894 611.07104 c
77.834183 614.97632 84.165817 614.97632 88.07106 611.07104 c
f
1 1 1 sc
443.6066 26.60659 m
449.46448 20.74873 449.46448 11.25127 443.6066 5.3934102 c
437.74872 -0.46448001 428.25128 -0.46448001 422.3934 5.3934102 c
416.53552 11.25127 416.53552 20.74873 422.3934 26.60659 c
428.25128 32.464481 437.74872 32.464481 443.6066 26.60659 c
f
1 w
1 J
1 j
0.60000002 i
0.246133 0.26041299 0.26518801 sc
1 0 0 -1 -351 674 cm
794.60657 647.39343 m
800.46448 653.25128 800.46448 662.74872 794.60657 668.60657 c
788.74872 674.46448 779.25128 674.46448 773.39343 668.60657 c
767.53552 662.74872 767.53552 653.25128 773.39343 647.39343 c
779.25128 641.53552 788.74872 641.53552 794.60657 647.39343 c
S
0 i
CM
440.42462 23.424614 m
444.52515 19.324112 444.52515 12.675889 440.42462 8.575387 c
436.3241 4.474864 429.6759 4.474864 425.57538 8.575387 c
421.47485 12.675889 421.47485 19.324112 425.57538 23.424614 c
429.6759 27.525137 436.3241 27.525137 440.42462 23.424614 c
f
1 1 1 sc
202 323.33334 m
316 323.33334 l
318.20914 323.33334 320 321.54248 320 319.33334 c
320 262.33334 l
320 260.12421 318.20914 258.33334 316 258.33334 c
202 258.33334 l
199.79086 258.33334 198 260.12421 198 262.33334 c
198 319.33334 l
198 321.54248 199.79086 323.33334 202 323.33334 c
h
202 323.33334 m
f
2 w
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
553 350.66666 m
667 350.66666 l
669.20917 350.66666 671 352.45752 671 354.66666 c
671 411.66666 l
671 413.87579 669.20917 415.66666 667 415.66666 c
553 415.66666 l
550.79083 415.66666 549 413.87579 549 411.66666 c
549 354.66666 l
549 352.45752 550.79083 350.66666 553 350.66666 c
h
553 350.66666 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 290.83334 cm
-50.927502 -5 m
(./'012%$3!$40"'5,$)[ 7.943000 6.981000 6.266000 3.380000 7.462000 8.190000 7.462000 3.848000 3.380000 4.576000 3.848000 8.190000 3.380000 7.930000 6.266000 6.981000 5.772000 0.000000 ] xS
-30.940001 13 m
(&#%$%6\)+7)[ 6.981000 4.823000 7.462000 3.848000 7.462000 11.310000 8.190000 5.057000 0.000000 ] xS
1 0 0 -1 468 16 cm
-11.557 4 m
(%-2)[ 7.462000 7.462000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
24 406.5 m
138 406.5 l
140.20914 406.5 142 404.70914 142 402.5 c
142 345.5 l
142 343.29086 140.20914 341.5 138 341.5 c
24 341.5 l
21.790861 341.5 20 343.29086 20 345.5 c
20 402.5 l
20 404.70914 21.790861 406.5 24 406.5 c
h
24 406.5 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
375 267.5 m
489 267.5 l
491.20914 267.5 493 269.29086 493 271.5 c
493 328.5 l
493 330.70914 491.20914 332.5 489 332.5 c
375 332.5 l
372.79086 332.5 371 330.70914 371 328.5 c
371 271.5 l
371 269.29086 372.79086 267.5 375 267.5 c
h
375 267.5 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 81 374 cm
-47.047001 -5 m
(8"&2$,-&\),\("+,$)[ 6.747000 7.930000 6.981000 8.190000 3.848000 5.772000 7.462000 6.981000 8.190000 5.772000 7.462000 7.930000 5.057000 5.772000 0.000000 ] xS
-24.556999 13 m
(!#"6$93+)[ 4.576000 4.823000 7.930000 11.310000 3.848000 8.190000 3.380000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
202 406.5 m
316 406.5 l
318.20914 406.5 320 404.70914 320 402.5 c
320 345.5 l
320 343.29086 318.20914 341.5 316 341.5 c
202 341.5 l
199.79086 341.5 198 343.29086 198 345.5 c
198 402.5 l
198 404.70914 199.79086 406.5 202 406.5 c
h
202 406.5 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
553 267.5 m
667 267.5 l
669.20917 267.5 671 269.29086 671 271.5 c
671 328.5 l
671 330.70914 669.20917 332.5 667 332.5 c
553 332.5 l
550.79083 332.5 549 330.70914 549 328.5 c
549 271.5 l
549 269.29086 550.79083 267.5 553 267.5 c
h
553 267.5 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 374 cm
-45.044998 -5 m
(:3/$+#&303-9$/60$)[ 7.462000 3.380000 6.981000 3.848000 5.057000 5.057000 6.981000 3.380000 3.393000 3.380000 7.462000 8.190000 3.848000 6.981000 11.310000 3.380000 0.000000 ] xS
-31.902 13 m
('"##1\)+3"-)[ 6.266000 7.930000 5.057000 5.057000 7.462000 8.190000 5.070000 3.380000 7.930000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
376 406.5 m
490 406.5 l
492.20914 406.5 494 404.70914 494 402.5 c
494 345.5 l
494 343.29086 492.20914 341.5 490 341.5 c
376 341.5 l
373.79086 341.5 372 343.29086 372 345.5 c
372 402.5 l
372 404.70914 373.79086 406.5 376 406.5 c
h
376 406.5 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
727 267.5 m
841 267.5 l
843.20917 267.5 845 269.29086 845 271.5 c
845 328.5 l
845 330.70914 843.20917 332.5 841 332.5 c
727 332.5 l
724.79083 332.5 723 330.70914 723 328.5 c
723 271.5 l
723 269.29086 724.79083 267.5 727 267.5 c
h
727 267.5 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 433 374 cm
-52.013 -5 m
(;%21'%$+%/+$<%02$)[ 8.190000 7.462000 8.190000 7.462000 6.266000 7.462000 3.848000 5.057000 7.462000 6.981000 5.057000 3.848000 7.709000 7.462000 3.380000 8.190000 0.000000 ] xS
-24.797501 13 m
('\(&-9%,)[ 6.266000 7.462000 6.981000 7.462000 8.190000 7.462000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
202 240.16667 m
316 240.16667 l
318.20914 240.16667 320 238.37581 320 236.16667 c
320 179.16667 l
320 176.95753 318.20914 175.16667 316 175.16667 c
202 175.16667 l
199.79086 175.16667 198 176.95753 198 179.16667 c
198 236.16667 l
198 238.37581 199.79086 240.16667 202 240.16667 c
h
202 240.16667 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
553 433.83334 m
667 433.83334 l
669.20917 433.83334 671 435.62421 671 437.83334 c
671 494.83334 l
671 497.04248 669.20917 498.83334 667 498.83334 c
553 498.83334 l
550.79083 498.83334 549 497.04248 549 494.83334 c
549 437.83334 l
549 435.62421 550.79083 433.83334 553 433.83334 c
h
553 433.83334 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 207.66667 cm
-28.5285 -5 m
(=%-%#&+%$)[ 10.114000 7.462000 7.462000 7.462000 5.057000 6.981000 5.057000 7.462000 0.000000 ] xS
-47.060001 13 m
(6%+&2&+&$6&\),)[ 11.310000 7.462000 5.057000 6.981000 8.190000 6.981000 5.057000 6.981000 3.848000 11.310000 6.981000 8.190000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
202 157 m
316 157 l
318.20914 157 320 155.20914 320 153 c
320 96 l
320 93.790863 318.20914 92 316 92 c
202 92 l
199.79086 92 198 93.790863 198 96 c
198 153 l
198 155.20914 199.79086 157 202 157 c
h
202 157 m
f
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 -351 674 cm
553 517 m
667 517 l
669.20917 517 671 518.79083 671 521 c
671 578 l
671 580.20917 669.20917 582 667 582 c
553 582 l
550.79083 582 549 580.20917 549 578 c
549 521 l
549 518.79083 550.79083 517 553 517 c
h
553 517 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 259 124.5 cm
-45.5065 -5 m
(./+#&'+$'\(&-9%$)[ 7.943000 6.981000 5.057000 5.057000 6.981000 6.266000 5.057000 3.848000 6.266000 7.462000 6.981000 7.462000 8.190000 7.462000 0.000000 ] xS
-24.797501 13 m
(!%&+1#%,)[ 4.576000 7.462000 6.981000 5.057000 7.462000 4.823000 7.462000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
376 323.33334 m
490 323.33334 l
492.20914 323.33334 494 321.54248 494 319.33334 c
494 262.33334 l
494 260.12421 492.20914 258.33334 490 258.33334 c
376 258.33334 l
373.79086 258.33334 372 260.12421 372 262.33334 c
372 319.33334 l
372 321.54248 373.79086 323.33334 376 323.33334 c
h
376 323.33334 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
727 350.66666 m
841 350.66666 l
843.20917 350.66666 845 352.45752 845 354.66666 c
845 411.66666 l
845 413.87579 843.20917 415.66666 841 415.66666 c
727 415.66666 l
724.79083 415.66666 723 413.87579 723 411.66666 c
723 354.66666 l
723 352.45752 724.79083 350.66666 727 350.66666 c
h
727 350.66666 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 433 290.83334 cm
-53.2155 -5 m
(=%-%#&+%$3-+%#>&0$)[ 10.114000 7.462000 7.462000 7.462000 5.057000 6.981000 5.057000 7.462000 3.848000 3.380000 7.462000 5.057000 7.462000 5.057000 6.747000 6.981000 3.380000 0.000000 ] xS
-16.497 13 m
(+36%,)[ 5.070000 3.380000 11.310000 7.462000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
24 566 m
138 566 l
140.20914 566 142 564.20917 142 562 c
142 505 l
142 502.79086 140.20914 501 138 501 c
24 501 l
21.790861 501 20 502.79086 20 505 c
20 562 l
20 564.20917 21.790861 566 24 566 c
h
24 566 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
375 108 m
489 108 l
491.20914 108 493 109.79086 493 112 c
493 169 l
493 171.20914 491.20914 173 489 173 c
375 173 l
372.79086 173 371 171.20914 371 169 c
371 112 l
371 109.79086 372.79086 108 375 108 c
h
375 108 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 81 533.5 cm
-49.8615 -5 m
(?2%-+3!7$#%0%>&-+$)[ 3.614000 8.190000 7.462000 7.462000 5.070000 3.380000 4.576000 6.747000 3.848000 4.823000 7.462000 3.380000 7.462000 6.747000 6.981000 7.462000 5.057000 0.000000 ] xS
-41.905499 13 m
(\)#"*%'+,$3-$24)[ 8.190000 4.823000 7.930000 3.380000 7.462000 6.266000 5.057000 5.772000 3.848000 3.380000 7.462000 3.848000 8.203000 0.000000 ] xS
2 J
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 -351 674 cm
432 173 m
432 254.60001 l
S
0 J
0 j
0 i
432 264.20001 m
432 254.60001 l
435.60001 254.60001 m
432 264.20001 l
428.39999 254.60001 l
S
2 J
1 j
0.60000002 i
0.40000001 0.40000001 0.40000001 sc
493 300 m
536.09998 300 l
S
0 J
0 j
0 i
545.70001 300 m
536.09998 300 l
536.09998 296.39999 m
545.70001 300 l
536.09998 303.60001 l
S
2 J
1 j
0.60000002 i
610 332.5 m
610 337.76666 l
S
0 J
0 j
0 i
610 347.36667 m
610 337.76666 l
613.59998 337.76666 m
610 347.36667 l
606.40002 337.76666 l
S
2 J
1 j
0.60000002 i
610 415.66666 m
610 420.93332 l
S
0 J
0 j
0 i
610 430.53333 m
610 420.93332 l
613.59998 420.93332 m
610 430.53333 l
606.40002 420.93332 l
S
2 J
1 j
0.60000002 i
610 498.83334 m
610 504.10001 l
S
0 J
0 j
0 i
610 513.70001 m
610 504.10001 l
613.59998 504.10001 m
610 513.70001 l
606.40002 504.10001 l
S
2 J
1 j
0.60000002 i
671 549.5 m
686.90002 549.5 l
696.40002 549.5 l
696.40002 300 l
707.09998 300 l
710.09998 300 l
S
0 J
0 j
0 i
719.70001 300 m
710.09998 300 l
710.09998 296.39999 m
719.70001 300 l
710.09998 303.60001 l
S
2 J
1 j
0.60000002 i
784 332.5 m
784 348.39999 l
784 334.76666 l
784 337.76666 l
S
0 J
0 j
0 i
784 347.36667 m
784 337.76666 l
787.59998 337.76666 m
784 347.36667 l
780.40002 337.76666 l
S
1 1 1 sc
CM
376 240.16667 m
490 240.16667 l
492.20914 240.16667 494 238.37581 494 236.16667 c
494 179.16667 l
494 176.95753 492.20914 175.16667 490 175.16667 c
376 175.16667 l
373.79086 175.16667 372 176.95753 372 179.16667 c
372 236.16667 l
372 238.37581 373.79086 240.16667 376 240.16667 c
h
376 240.16667 m
f
1 J
1 j
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
727 433.83334 m
841 433.83334 l
843.20917 433.83334 845 435.62421 845 437.83334 c
845 494.83334 l
845 497.04248 843.20917 498.83334 841 498.83334 c
727 498.83334 l
724.79083 498.83334 723 497.04248 723 494.83334 c
723 437.83334 l
723 435.62421 724.79083 433.83334 727 433.83334 c
h
727 433.83334 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 433 207.66667 cm
-40.209 -5 m
(@&5%$\)#"*%'+$)[ 12.038000 6.981000 6.981000 7.462000 3.848000 8.190000 4.823000 7.930000 3.380000 7.462000 6.266000 5.057000 0.000000 ] xS
-42.126499 13 m
(-&6%,$1-3A1%)[ 7.462000 6.981000 11.310000 7.462000 5.772000 3.848000 7.462000 7.462000 3.380000 8.190000 7.462000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
376 157 m
490 157 l
492.20914 157 494 155.20914 494 153 c
494 96 l
494 93.790863 492.20914 92 490 92 c
376 92 l
373.79086 92 372 93.790863 372 96 c
372 153 l
372 155.20914 373.79086 157 376 157 c
h
376 157 m
f
0.60000002 i
0.72618699 0.750462 0.75752699 sc
1 0 0 -1 -351 674 cm
727 517 m
841 517 l
843.20917 517 845 518.79083 845 521 c
845 578 l
845 580.20917 843.20917 582 841 582 c
727 582 l
724.79083 582 723 580.20917 723 578 c
723 521 l
723 518.79083 724.79083 517 727 517 c
h
727 517 m
S
/Cs2 SC
0.25097999 0.26275 0.26666999 sc
0 i
1 0 0 -1 433 124.5 cm
-39.754002 -5 m
(B#36$610+3\)0%$)[ 6.266000 5.057000 3.380000 11.310000 3.848000 11.310000 7.462000 3.393000 5.070000 3.380000 8.190000 3.380000 7.462000 0.000000 ] xS
-24.660999 13 m
(,%,,3"-,)[ 5.772000 7.462000 5.772000 5.772000 3.380000 7.930000 7.462000 0.000000 ] xS
2 J
0.60000002 i
/Cs1 SC
0.40000001 0.40000001 0.40000001 sc
1 0 0 -1 -351 674 cm
784 415.66666 m
784 420.93332 l
S
0 J
0 j
0 i
784 430.53333 m
784 420.93332 l
787.59998 420.93332 m
784 430.53333 l
780.40002 420.93332 l
S
2 J
1 j
0.60000002 i
783.5 582 m
784 627.09998 l
784 630.09998 l
S
0 J
0 j
0 i
784 639.70001 m
784 630.09998 l
787.59998 630.09998 m
784 639.70001 l
780.40002 630.09998 l
S
2 J
1 j
0.60000002 i
784 498.83334 m
784 504.10001 l
S
0 J
0 j
0 i
784 513.70001 m
784 504.10001 l
787.59998 504.10001 m
784 513.70001 l
780.40002 504.10001 l
S
ep
end
%%Trailer
%%EOF
